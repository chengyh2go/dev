向github推送：
git remote add origin https://github.com/chengyh2go/manager.git
git push -u origin master

将jar导入maven仓库，使用此命令
mvn install:install-file -Dfile=jar包的位置(参数一) -DgroupId=groupId(参数二) -DartifactId=artifactId(参数三) -Dversion=version(参数四) -Dpackaging=jar
例如：
mvn install:install-file -DgroupId=org.pivotal -DartifactId=greenplum -Dversion=6.3.0 -Dpackaging=jar -Dfile=greenplum.jar

----------------git proxy代理设置--------------------------

设置如下（可复制）：
git config --global http.proxy http://127.0.0.1:10001
git config --global https.proxy https://127.0.0.1:10001

git config --global http.proxy 'socks5://127.0.0.1:1080' 
git config --global https.proxy 'socks5://127.0.0.1:1080'


----------------git proxy代理取消--------------------------

git config --global --unset http.proxy
git config --global --unset https.proxy

https://goproxy.cn,direct

go env -w GOPROXY=https://goproxy.cn,direct
go env -w GO111MODULE=on

linux:
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build

windows:
SET CGO_ENABLED=0
SET GOARCH=amd64
SET GOOS=linux
go build

export CGO_ENABLED=0
export GOARCH=amd64
export GOOS=linux
go build

pom.xml
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- 打jar包插件(会包含所有依赖)-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-assembly-plugin</artifactId>-->
            <!--                <version>2.6</version>-->
            <!--                <configuration>-->
            <!--                    <descriptorRefs>-->
            <!--                        <descriptorRef>jar-with-dependencies</descriptorRef>-->
            <!--                    </descriptorRefs>-->
            <!--                    <archive>-->
            <!--                        <manifest>-->
            <!--                            &lt;!&ndash; 可以设置jar包的入口类(可选) &ndash;&gt;-->
            <!--                            <mainClass>com.sinobridge.flink.DataStreamSocketSample</mainClass>-->
            <!--                        </manifest>-->
            <!--                    </archive>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>make-assembly</id>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>single</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <!-- 阿里实时计算平台打jar包插件(会包含所有依赖)-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>com.xyzq.test.App</Main-Class>
                                        <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                                        <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
